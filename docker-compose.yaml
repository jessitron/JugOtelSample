services:

  postgres:
    env_file:
      - ./.env
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - chat-network

  migrations:
    image: flyway/flyway:9.22.1
    command: -url=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_DB} -user=${POSTGRES_USER} -password=${POSTGRES_PASSWORD} -connectRetries=60 migrate
    volumes:
      - ./db/migrations:/flyway/sql
    env_file:
      - ./.env
    depends_on:
      - postgres
    networks:
      - chat-network

  chat-service:
    build:
      context: ./services/chat_service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - OTEL_SERVICE_NAME=chat-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_EXPORTER_OTLP_PROTOCOL=${OTEL_EXPORTER_OTLP_PROTOCOL}
      - OTEL_LOGS_EXPORTER=${OTEL_LOGS_EXPORTER}
    env_file:
      - ./.env
    networks:
      - chat-network

  ecommerce-service:
    build:
      context: ./services/ecommerce_service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - OTEL_SERVICE_NAME=ecommerce-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_EXPORTER_OTLP_PROTOCOL=${OTEL_EXPORTER_OTLP_PROTOCOL}
      - OTEL_JAVAAGENT_LOGGING_LEVEL=${OTEL_JAVAAGENT_LOGGING_LEVEL:-info}
    env_file:
      - ./.env
    depends_on:
      - postgres
      - migrations
    networks:
      - chat-network

  ecommerce-app:
    build:
      context: ./ecommerce-app
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    environment:
      - NG_APP_CHAT_ENDPOINT=http://chat-service:8080/api
      - NG_APP_COMMERCE_ENDPOINT=http://ecommerce-service:8081/api
    env_file:
      - ./.env
    depends_on:
      - chat-service
      - ecommerce-service
    networks:
      - chat-network

  otel-collector:
    image: honeycombio/honeycomb-opentelemetry-collector:latest
    volumes:
      - ./otel-collector/otel-collector-config.yaml:/config.yaml
    environment:
      - HONEYCOMB_API_KEY=${HONEYCOMB_API_KEY}
    env_file:
      - ./.env
    networks:
      - chat-network
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver

networks:
  chat-network:
    driver: bridge
